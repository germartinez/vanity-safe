{"version":3,"sources":["logic/safe.ts","config/networks.ts","utils/index.ts","logic/vanity.ts","styles/commonElements.ts","components/Header/ConnectButton.tsx","components/Header/index.tsx","components/SearchResult/index.tsx","components/Settings/index.tsx","components/Statistics/index.tsx","components/App/index.tsx","reportWebVitals.ts","styles/globalStyles.ts","index.tsx"],"names":["safeMasterCopy","safeProxyFactory","defaultNetworks","1","masterCopyAddress","proxyFactoryAddress","fallbackHandlerAddress","4","5","42","100","246","73799","zeroAddress","repeat","formatNumber","number","toString","replace","formatPercentage","Math","round","TruffleContract","require","getSafeContracts","web3","network","a","GnosisSafe","abi","GnosisSafeAbi","setProvider","currentProvider","at","ProxyFactory","GnosisSafeProxyFactoryAbi","masterCopy","proxyFactory","getGnosisSafeData","ownerAccount","contract","methods","setup","encodeABI","gnosisSafeFata","calculateSafeAddress","nonce","eth","net","getId","creationData","encodedNonce","rawEncode","proxyCreationCode","constructorData","address","from","toBuffer","salt","keccak256","initCode","proxyAddress","generateAddress2","utils","toChecksumAddress","deploySafeContract","createProxyWithNonce","tx","deployedSafeAddress","receipt","rawLogs","data","substr","isValidVanitySafe","addressPattern","isCaseSensitive","subStrAddress","length","toLowerCase","getCode","SCard","styled","Card","Line","div","LineCenter","SEthHashInfo","EthHashInfo","WalletConnectProvider","default","Web3ConnectButton","ConnectButton","onConnect","Button","providerOptions","walletconnect","package","options","infuraId","process","onClose","Wrapper","STitle","Title","SSEthHashInfo","Header","owner","setWeb3","onWeb3Connect","provider","Web3","size","withoutMargin","hash","name","showIdenticon","identiconSize","textSize","showCopyBtn","showEtherscanBtn","shortenHash","AddressBox","p","opaque","ResultProcess","SLoader","Loader","Link","ResultButtonsBox","SearchResult","searchResultProps","useState","isScreenWidthSmall","setIsScreenWidthSmall","safeState","setSafeState","outputAddress","isValid","isDeploying","deployedAddress","useEffect","window","innerWidth","scrollTo","document","body","scrollHeight","deploySafe","state","safeAddress","console","error","color","href","target","rel","variant","onClick","disabled","Form","Settings","search","saltNonce","setSearchState","id","label","value","onChange","e","autoComplete","checked","_","Bar","FilledBar","width","Percentage","Statistics","statistics","difficulty","attempts","probability","isRunning","initialSaltNonce","currentSaltNonce","Container","Body","initialOutputAddress","searchInitialState","safeInitialState","statisticInitialState","App","undefined","searchState","statisticsState","setStatisticsState","getSafeOwner","defaultAccount","getAccounts","pow","step","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","avertaFont","avertaBoldFont","ReactDOM","render","StrictMode","theme","getElementById"],"mappings":"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","file":"static/js/main.5de24f93.chunk.js","sourcesContent":["import abi from 'ethereumjs-abi'\nimport { generateAddress2 } from 'ethereumjs-util/dist/account'\nimport { toBuffer } from 'ethereumjs-util/dist/bytes'\nimport { keccak256 } from 'ethereumjs-util/dist/hash'\nimport Web3 from 'web3'\nimport GnosisSafeAbi from '../abis/GnosisSafeAbi.json'\nimport GnosisSafeProxyFactoryAbi from '../abis/GnosisSafeProxyFactoryAbi.json'\nimport { defaultNetworks, NetworkConfigEntry } from '../config/networks'\nimport { zeroAddress } from '../utils'\nconst TruffleContract = require('@truffle/contract')\n\nlet safeMasterCopy: any\nlet safeProxyFactory: any\n\ninterface SafeContractsResult {\n  masterCopy: any\n  proxyFactory: any\n}\n\nconst getSafeContracts = async (\n  web3: Web3,\n  network: NetworkConfigEntry\n): Promise<SafeContractsResult> => {\n  if (!safeMasterCopy || !safeMasterCopy) {\n    const GnosisSafe = TruffleContract({ abi: GnosisSafeAbi })\n    GnosisSafe.setProvider(web3.currentProvider)\n    safeMasterCopy = await GnosisSafe.at(network.masterCopyAddress)\n\n    const ProxyFactory = TruffleContract({ abi: GnosisSafeProxyFactoryAbi })\n    ProxyFactory.setProvider(web3.currentProvider)\n    safeProxyFactory = await ProxyFactory.at(network.proxyFactoryAddress)\n  }\n\n  return { masterCopy: safeMasterCopy, proxyFactory: safeProxyFactory }\n}\n\nconst getGnosisSafeData = async (\n  masterCopy: any,\n  ownerAccount: string,\n  network: NetworkConfigEntry\n): Promise<string> => {\n  const gnosisSafeFata = await masterCopy.contract.methods\n    .setup(\n      [ownerAccount],\n      1,\n      zeroAddress,\n      '0x',\n      network.fallbackHandlerAddress,\n      zeroAddress,\n      0,\n      zeroAddress\n    )\n    .encodeABI()\n\n  return gnosisSafeFata\n}\n\nexport const calculateSafeAddress = async (\n  web3: Web3,\n  ownerAccount: string,\n  nonce: string\n): Promise<string> => {\n  const network = defaultNetworks[await web3.eth.net.getId()]\n  const { masterCopy, proxyFactory } = await getSafeContracts(web3, network)\n\n  const creationData = await getGnosisSafeData(\n    masterCopy,\n    ownerAccount,\n    network\n  )\n  const encodedNonce = abi.rawEncode(['uint256'], [nonce]).toString('hex')\n\n  const proxyCreationCode = await proxyFactory.proxyCreationCode()\n  const constructorData = abi\n    .rawEncode(['address'], [masterCopy.address])\n    .toString('hex')\n\n  const from = toBuffer(proxyFactory.address)\n  const salt = keccak256(\n    toBuffer(\n      '0x' + keccak256(toBuffer(creationData)).toString('hex') + encodedNonce\n    )\n  )\n  const initCode = toBuffer(proxyCreationCode + constructorData)\n  const proxyAddress =\n    '0x' + generateAddress2(from, salt, initCode).toString('hex')\n\n  return web3.utils.toChecksumAddress(proxyAddress)\n}\n\nexport const deploySafeContract = async (\n  ownerAccount: string,\n  nonce: number,\n  web3: Web3\n) => {\n  const network = defaultNetworks[await web3.eth.net.getId()]\n  const { masterCopy, proxyFactory } = await getSafeContracts(web3, network)\n\n  const creationData = await getGnosisSafeData(\n    masterCopy,\n    ownerAccount,\n    network\n  )\n\n  const tx = await proxyFactory.createProxyWithNonce(\n    masterCopy.address,\n    creationData,\n    nonce,\n    {\n      from: ownerAccount\n    }\n  )\n\n  const deployedSafeAddress = '0x' + tx.receipt.rawLogs[0].data.substr(-40)\n  return deployedSafeAddress\n}\n","export interface NetworkConfigEntry {\n  masterCopyAddress: string\n  proxyFactoryAddress: string\n  fallbackHandlerAddress: string\n}\n\nexport interface NetworksConfig {\n  [id: string]: NetworkConfigEntry\n}\n\nexport const defaultNetworks: NetworksConfig = {\n  // mainnet\n  1: {\n    masterCopyAddress: '0x6851D6fDFAfD08c0295C392436245E5bc78B0185',\n    proxyFactoryAddress: '0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B',\n    fallbackHandlerAddress: '0xd5D82B6aDDc9027B22dCA772Aa68D5d74cdBdF44'\n  },\n  // rinkeby testnet\n  4: {\n    masterCopyAddress: '0x6851D6fDFAfD08c0295C392436245E5bc78B0185',\n    proxyFactoryAddress: '0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B',\n    fallbackHandlerAddress: '0xd5D82B6aDDc9027B22dCA772Aa68D5d74cdBdF44'\n  },\n  // goerli testnet\n  5: {\n    masterCopyAddress: '0x6851D6fDFAfD08c0295C392436245E5bc78B0185',\n    proxyFactoryAddress: '0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B',\n    fallbackHandlerAddress: '0xd5D82B6aDDc9027B22dCA772Aa68D5d74cdBdF44'\n  },\n  // kovan testnet\n  42: {\n    masterCopyAddress: '0x6851D6fDFAfD08c0295C392436245E5bc78B0185',\n    proxyFactoryAddress: '0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B',\n    fallbackHandlerAddress: '0xd5D82B6aDDc9027B22dCA772Aa68D5d74cdBdF44'\n  },\n  // xdai\n  100: {\n    masterCopyAddress: '0x6851D6fDFAfD08c0295C392436245E5bc78B0185',\n    proxyFactoryAddress: '0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B',\n    fallbackHandlerAddress: '0xd5D82B6aDDc9027B22dCA772Aa68D5d74cdBdF44'\n  },\n  // energy web chain\n  246: {\n    masterCopyAddress: '0x6851D6fDFAfD08c0295C392436245E5bc78B0185',\n    proxyFactoryAddress: '0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B',\n    fallbackHandlerAddress: '0xd5D82B6aDDc9027B22dCA772Aa68D5d74cdBdF44'\n  },\n  // energy web chain volta testnet\n  73799: {\n    masterCopyAddress: '0x6851D6fDFAfD08c0295C392436245E5bc78B0185',\n    proxyFactoryAddress: '0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B',\n    fallbackHandlerAddress: '0xd5D82B6aDDc9027B22dCA772Aa68D5d74cdBdF44'\n  }\n}\n","export const zeroAddress = `0x${'0'.repeat(40)}`\n\nexport const formatNumber = (number: number): string => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\n}\n\nexport const formatPercentage = (number: number): number => {\n  return Math.round(10000 * number) / 100\n}\n","import Web3 from 'web3'\n\nexport const isValidVanitySafe = async (\n  addressPattern: string,\n  isCaseSensitive: boolean,\n  address: string,\n  web3: Web3\n): Promise<boolean> => {\n  const subStrAddress = address.substr(2, addressPattern.length)\n\n  if (\n    !isCaseSensitive &&\n    addressPattern.toLowerCase() !== subStrAddress.toLowerCase()\n  ) {\n    return false\n  }\n  if (isCaseSensitive && addressPattern !== subStrAddress) {\n    return false\n  }\n  return (await web3.eth.getCode(address)) === '0x'\n}\n","import { Card, EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nexport const SCard = styled(Card)`\n  margin: 24px;\n  @media screen and (max-width: 950px) {\n    margin: 10px auto;\n    width: 600px;\n  }\n  @media screen and (max-width: 650px) {\n    margin: 10px 0;\n    width: 100%;\n  }\n`\n\nexport const Line = styled.div`\n  display: flex;\n  height: 50px;\n  align-items: center;\n  & > p:first-child {\n    font-weight: bold;\n    margin-right: 10px;\n  }\n`\n\nexport const LineCenter = styled(Line)`\n  justify-content: center;\n`\n\nexport const SEthHashInfo = styled(EthHashInfo)`\n  & > div > p {\n    font-weight: bold;\n  }\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport Web3Connect from 'web3connect'\n\nconst {\n  default: WalletConnectProvider\n} = require('@walletconnect/web3-provider')\n\nconst Web3ConnectButton = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  & > div {\n    padding: 0;\n  }\n  @media screen and (max-width: 500px) {\n    & > div {\n      max-width: 100%;\n    }\n  }\n  .web3connect-connect-button {\n    outline: none;\n    background: #008c73;\n    border: 1px solid #008c73;\n    border-radius: 4px;\n    color: #fff;\n    cursor: pointer;\n    transform: none;\n    padding: 0 25px;\n    font-weight: normal;\n    font-size: 14px;\n    box-shadow: none;\n  }\n  .web3connect-connect-button:hover {\n    background: #005546;\n    box-shadow: none;\n    transform: none;\n  }\n`\n\ntype ConnectButtonProps = {\n  onConnect: Function\n}\n\nconst ConnectButton = ({ onConnect }: ConnectButtonProps) => (\n  <Web3ConnectButton>\n    <Web3Connect.Button\n      providerOptions={{\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId: process.env.REACT_APP_INFURA_ID\n          }\n        }\n      }}\n      onConnect={onConnect}\n      onClose={() => {}}\n    />\n  </Web3ConnectButton>\n)\n\nexport default ConnectButton\n","import { Title } from '@gnosis.pm/safe-react-components'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { Line, SCard, SEthHashInfo } from '../../styles/commonElements'\nimport ConnectButton from './ConnectButton'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media screen and (max-width: 500px) {\n    align-items: stretch;\n    flex-direction: column;\n  }\n`\n\nconst STitle = styled(Title)`\n  color: #008c73;\n  padding: 0 15px 0 0;\n  @media screen and (max-width: 500px) {\n    padding: 0 0 15px 0;\n    text-align: center;\n  }\n`\n\nconst SSEthHashInfo = styled(SEthHashInfo)`\n  margin: 0 auto;\n`\n\ninterface HeaderProps {\n  owner: string\n  setWeb3: Function\n}\n\nconst Header = ({ owner, setWeb3 }: HeaderProps) => {\n  const onWeb3Connect = async (provider: any) => {\n    if (provider) {\n      const web3 = new Web3(provider)\n      setWeb3(web3)\n    }\n  }\n\n  return (\n    <SCard>\n      <Wrapper>\n        <STitle size=\"md\" withoutMargin>\n          Vanity Safe Generator\n        </STitle>\n        <Line>\n          {!owner ? (\n            <ConnectButton onConnect={onWeb3Connect} />\n          ) : (\n            <SSEthHashInfo\n              hash={owner}\n              name=\"Safe owner:\"\n              showIdenticon\n              identiconSize=\"lg\"\n              textSize=\"xl\"\n              showCopyBtn\n              showEtherscanBtn\n              shortenHash={4}\n            />\n          )}\n        </Line>\n      </Wrapper>\n    </SCard>\n  )\n}\n\nexport default Header\n","import { Button, Loader, Text } from '@gnosis.pm/safe-react-components'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { deploySafeContract } from '../../logic/safe'\nimport { LineCenter, SCard, SEthHashInfo } from '../../styles/commonElements'\n\ninterface AddressBoxProps {\n  opaque: boolean\n}\n\nconst AddressBox = styled.div<AddressBoxProps>`\n  opacity: ${(p) => (p.opaque ? 0.2 : 1)};\n  min-width: 490px;\n  @media screen and (max-width: 950px) {\n    min-width: 100%;\n    width: 100%;\n  }\n`\n\nconst ResultProcess = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 30px 0 10px 0;\n`\n\nconst SLoader = styled(Loader)`\n  margin-left: 5px;\n`\n\nconst Link = styled.a`\n  text-decoration: none;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst ResultButtonsBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px auto 0;\n  .MuiButton-root {\n    @media screen and (max-width: 950px) {\n      width: 100%;\n    }\n  }\n`\n\ninterface SafeState {\n  nonce: number\n  owner: string\n  outputAddress: string\n  isValid: boolean\n  isDeploying: boolean\n  deployedAddress: string\n}\n\ninterface SearchResultProps {\n  safeState: SafeState\n  web3: any\n  setSafeState: Function\n}\n\nconst SearchResult = (searchResultProps: SearchResultProps) => {\n  const [isScreenWidthSmall, setIsScreenWidthSmall] = useState(false)\n  const { safeState, web3, setSafeState } = searchResultProps\n  const {\n    nonce,\n    owner,\n    outputAddress,\n    isValid,\n    isDeploying,\n    deployedAddress\n  } = safeState\n\n  useEffect(() => {\n    if (window.innerWidth <= 650) {\n      setIsScreenWidthSmall(true)\n      return\n    }\n    setIsScreenWidthSmall(false)\n  }, [isValid])\n\n  useEffect(() => {\n    window.scrollTo(0, document.body.scrollHeight)\n  }, [isDeploying])\n\n  const deploySafe = async (owner: string, nonce: number) => {\n    setSafeState((state: SafeState) => ({ ...state, isDeploying: true }))\n    try {\n      const safeAddress = await deploySafeContract(owner, nonce, web3)\n      setSafeState((state: SafeState) => ({\n        ...state,\n        deployedAddress: safeAddress\n      }))\n    } catch (e) {\n      console.error(e)\n    }\n    setSafeState((state: SafeState) => ({ ...state, isDeploying: false }))\n  }\n\n  return (\n    <SCard>\n      <LineCenter>\n        <AddressBox opaque={!isValid}>\n          <SEthHashInfo\n            hash={outputAddress}\n            name=\"Safe address:\"\n            showIdenticon\n            identiconSize=\"lg\"\n            textSize=\"xl\"\n            network=\"rinkeby\"\n            showCopyBtn={isValid}\n            showEtherscanBtn={isValid}\n            shortenHash={isScreenWidthSmall ? 8 : 0}\n          />\n        </AddressBox>\n      </LineCenter>\n      {isDeploying && (\n        <ResultProcess>\n          <SLoader size=\"sm\" />\n        </ResultProcess>\n      )}\n      {deployedAddress && (\n        <ResultProcess>\n          <LineCenter>\n            <Text size=\"xl\" color=\"primary\">\n              Congratulations! Your Safe is ready!\n            </Text>\n          </LineCenter>\n        </ResultProcess>\n      )}\n      <ResultButtonsBox>\n        {!deployedAddress ? (\n          <Button\n            size=\"lg\"\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => deploySafe(owner, nonce)}\n            disabled={!isValid || isDeploying}\n          >\n            Deploy Safe\n          </Button>\n        ) : (\n          <Link\n            href={`https://rinkeby.gnosis-safe.io/app/#/safes/${deployedAddress}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <Button size=\"lg\" color=\"primary\" variant=\"contained\">\n              Open in Safe Multisig app\n            </Button>\n          </Link>\n        )}\n      </ResultButtonsBox>\n    </SCard>\n  )\n}\n\nexport default SearchResult\n\n/*\n  {!isValid && !isRunning && (\n    <LineCenter>\n    </LineCenter>\n  )}\n\n  {!isValid && isRunning && (\n    <LineCenter>\n      <SLoader size=\"sm\" />\n    </LineCenter>\n  )}\n\n  {isValid && (\n    <>\n      <SLine>\n        <Text size=\"xl\">Safe address:</Text>\n        <EthHashInfo\n          hash={outputAddress}\n          showIdenticon\n          identiconSize=\"lg\"\n          textSize=\"xl\"\n          showCopyBtn\n          showEtherscanBtn\n        />\n      </SLine>\n      <SButton\n        size=\"lg\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => deploySafe(owner, nonce)}\n      >\n        Deploy Safe\n      </SButton>\n    </>\n  )}\n*/\n\n/*\n  <SCard>\n    <SLine>\n      <Text size=\"xl\">Safe address:</Text>\n      {isValid && (\n        <EthHashInfo\n          hash={outputAddress}\n          showIdenticon\n          identiconSize=\"lg\"\n          textSize=\"xl\"\n          showCopyBtn\n          showEtherscanBtn\n        />\n      )}\n      {isRunning && (\n        <SLoader size=\"sm\" />\n      )}\n    </SLine>\n    <SButton\n      size=\"lg\"\n      color=\"primary\"\n      variant=\"contained\"\n      onClick={() => deploySafe(owner, nonce)}\n      disabled={!isValid}\n    >\n      Deploy Safe\n    </SButton>\n  </SCard>\n*/\n","import {\n  Button,\n  Checkbox,\n  Text,\n  TextField\n} from '@gnosis.pm/safe-react-components'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Line, SCard } from '../../styles/commonElements'\n\nconst Form = styled.div`\n  .MuiButton-root {\n    display: block;\n    margin-top: 24px;\n    width: 100%;\n  }\n  .MuiTextField-root {\n    width: 100%;\n  }\n`\n\ninterface SearchConfig {\n  addressPattern: string\n  isCaseSensitive: boolean\n}\n\ninterface SettingsProps {\n  search: any\n  addressPattern: string\n  isCaseSensitive: boolean\n  saltNonce: string\n  setSearchState: Function\n  disabled: boolean\n}\n\nconst Settings = ({\n  search,\n  addressPattern,\n  isCaseSensitive,\n  saltNonce,\n  setSearchState,\n  disabled\n}: SettingsProps) => {\n  return (\n    <SCard>\n      <Form>\n        <Line>\n          <Text size=\"xl\">Safe address prefix:</Text>\n        </Line>\n        <TextField\n          id=\"targetAddress\"\n          label=\"0x\"\n          value={addressPattern}\n          onChange={(e) =>\n            setSearchState((state: SearchConfig) => ({\n              ...state,\n              addressPattern: e.target.value\n            }))\n          }\n          autoComplete=\"off\"\n        />\n        <Line>\n          <Checkbox\n            name=\"checkbox\"\n            checked={isCaseSensitive}\n            onChange={(_, checked) =>\n              setSearchState((state: SearchConfig) => ({\n                ...state,\n                isCaseSensitive: checked\n              }))\n            }\n            label=\"Case-sensitive\"\n          />\n        </Line>\n        <Line>\n          <Text size=\"xl\">Start with nonce:</Text>\n        </Line>\n        <TextField\n          id=\"saltNonce\"\n          label=\"Salt nonce\"\n          value={saltNonce}\n          onChange={(e) =>\n            setSearchState((state: SearchConfig) => ({\n              ...state,\n              saltNonce: e.target.value\n            }))\n          }\n          autoComplete=\"off\"\n        />\n        <Button\n          size=\"lg\"\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={search}\n          disabled={disabled}\n        >\n          Generate custom Safe address\n        </Button>\n      </Form>\n    </SCard>\n  )\n}\n\nexport default Settings\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Line, SCard } from '../../styles/commonElements'\nimport { formatNumber, formatPercentage } from '../../utils'\n\nconst Bar = styled.div`\n  background: #f0efee;\n  flex: 1;\n  margin-right: 10px;\n  border-radius: 4px;\n  overflow: hidden;\n`\n\ninterface FilledBarProps {\n  width: number\n}\n\nconst FilledBar = styled.div<FilledBarProps>`\n  background: #008c73;\n  height: 15px;\n  width: ${(p) => p.width + '%'};\n`\n\nconst Percentage = styled.div`\n  width: 65px;\n`\n\ninterface StatisticsProps {\n  difficulty: number\n  attempts: number\n  initialSaltNonce: number\n  currentSaltNonce: number\n  probability: number\n  isRunning: boolean\n}\n\nconst Statistics = (statistics: StatisticsProps) => {\n  const {\n    difficulty,\n    attempts,\n    probability,\n    isRunning,\n    initialSaltNonce,\n    currentSaltNonce\n  } = statistics\n  return (\n    <SCard>\n      <Line>\n        <Text size=\"xl\">Difficulty:</Text>\n        <Text size=\"xl\">{formatNumber(difficulty)}</Text>\n      </Line>\n      <Line>\n        <Text size=\"xl\">Generated addresses:</Text>\n        <Text size=\"xl\">{formatNumber(attempts)}</Text>\n      </Line>\n      <Line>\n        <Text size=\"xl\">Nonces checked:</Text>\n        <Text size=\"xl\">\n          {formatNumber(initialSaltNonce)} - {formatNumber(currentSaltNonce)}\n        </Text>\n      </Line>\n      <Line>\n        <Text size=\"xl\">Probability:</Text>\n        <Bar>\n          <FilledBar width={formatPercentage(probability)}></FilledBar>\n        </Bar>\n        <Percentage>\n          <Text size=\"xl\">{formatPercentage(probability)}%</Text>\n        </Percentage>\n      </Line>\n      <Line>\n        <Text size=\"xl\">Status:</Text>\n        <Text size=\"xl\">{isRunning ? 'Running' : 'Stopped'}</Text>\n      </Line>\n    </SCard>\n  )\n}\n\nexport default Statistics\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { calculateSafeAddress } from '../../logic/safe'\nimport { isValidVanitySafe } from '../../logic/vanity'\nimport Header from '../Header'\nimport SearchResult from '../SearchResult'\nimport Settings from '../Settings'\nimport Statistics from '../Statistics'\n\nconst Container = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  max-width: 950px;\n  margin: 0 auto;\n`\n\nconst Body = styled.div`\n  display: flex;\n  & > div {\n    flex: 1 1;\n  }\n  @media screen and (max-width: 950px) {\n    flex-direction: column;\n  }\n`\n\nconst initialOutputAddress =\n  '0x ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?'\n\nconst searchInitialState = {\n  addressPattern: '',\n  isCaseSensitive: false,\n  saltNonce: '0'\n}\n\nconst safeInitialState = {\n  nonce: 0,\n  owner: '',\n  outputAddress: initialOutputAddress,\n  isValid: false,\n  isDeploying: false,\n  deployedAddress: ''\n}\n\nconst statisticInitialState = {\n  difficulty: 0,\n  attempts: 0,\n  initialSaltNonce: 0,\n  currentSaltNonce: 0,\n  probability: 0,\n  isRunning: false\n}\n\nconst App = () => {\n  const [web3, setWeb3] = useState<any | undefined>(undefined)\n  const [searchState, setSearchState] = useState(searchInitialState)\n  const [safeState, setSafeState] = useState(safeInitialState)\n  const [statisticsState, setStatisticsState] = useState(statisticInitialState)\n\n  useEffect(() => {\n    const getSafeOwner = async (web3: any) => {\n      const owner = web3.eth.defaultAccount || (await web3.eth.getAccounts())[0]\n      setSafeState((state) => ({ ...state, owner }))\n    }\n\n    if (!web3) return\n    getSafeOwner(web3)\n  }, [web3])\n\n  useEffect(() => {\n    const { addressPattern, isCaseSensitive } = searchState\n    let difficulty = 0\n    if (addressPattern) {\n      difficulty = isCaseSensitive\n        ? Math.pow(22, addressPattern.length)\n        : Math.pow(16, addressPattern.length)\n    }\n    setStatisticsState((state) => ({ ...state, difficulty }))\n  }, [searchState])\n\n  useEffect(() => {\n    const step = async () => {\n      if (!web3) return\n      const { owner, nonce } = safeState\n      const { addressPattern, isCaseSensitive } = searchState\n      const address = await calculateSafeAddress(web3, owner, nonce.toString())\n\n      if (\n        !(await isValidVanitySafe(\n          addressPattern,\n          isCaseSensitive,\n          address,\n          web3\n        ))\n      ) {\n        setSafeState((state) => ({\n          ...state,\n          outputAddress: address,\n          nonce: state.nonce + 1\n        }))\n        setStatisticsState((state) => ({\n          ...state,\n          attempts: state.attempts + 1,\n          currentSaltNonce: state.currentSaltNonce + 1,\n          probability: 1 - Math.pow(1 - 1 / state.difficulty, state.attempts)\n        }))\n      } else {\n        setSafeState((state) => ({\n          ...state,\n          outputAddress: address,\n          isValid: true\n        }))\n        setStatisticsState((state) => ({ ...state, isRunning: false }))\n      }\n    }\n\n    if (!statisticsState.isRunning) return\n    try {\n      step()\n    } catch (e) {\n      console.error(e)\n      setStatisticsState((state) => ({ ...state, isRunning: false }))\n    }\n  }, [web3, statisticsState.isRunning, searchState, safeState])\n\n  const search = () => {\n    window.scrollTo(0, document.body.scrollHeight)\n    setStatisticsState((state) => ({\n      ...state,\n      attempts: 1,\n      initialSaltNonce: parseInt(searchState.saltNonce),\n      currentSaltNonce: parseInt(searchState.saltNonce),\n      probability: 0,\n      isRunning: true\n    }))\n    setSafeState((state) => ({\n      ...state,\n      nonce: parseInt(searchState.saltNonce),\n      outputAddress: initialOutputAddress,\n      isValid: false,\n      isDeploying: false,\n      deployedAddress: ''\n    }))\n  }\n\n  return (\n    <Container>\n      <Header owner={safeState.owner} setWeb3={setWeb3} />\n      <Body>\n        <Settings\n          search={search}\n          {...searchState}\n          setSearchState={setSearchState}\n          disabled={\n            !safeState.owner ||\n            safeState.isDeploying ||\n            !searchState.addressPattern ||\n            !searchState.saltNonce ||\n            statisticsState.isRunning\n          }\n        />\n        <Statistics {...statisticsState} />\n      </Body>\n      <SearchResult\n        safeState={safeState}\n        web3={web3}\n        setSafeState={setSafeState}\n      />\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import avertaBoldFont from '@gnosis.pm/safe-react-components/dist/fonts/averta-bold.woff2'\nimport avertaFont from '@gnosis.pm/safe-react-components/dist/fonts/averta-normal.woff2'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    font-size: 14px;\n    box-sizing: border-box;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: #F7F5F5;\n    @media screen and (max-width: 950px) {\n      padding: 10px;\n    }\n  }\n\n  @font-face {\n    font-family: 'Averta';\n    font-display: swap;\n    src: local('Averta'), local('Averta Bold'),\n    url(${avertaFont}) format('woff2'),\n    url(${avertaBoldFont}) format('woff');\n  }\n`\n\nexport default GlobalStyle\n","import { theme } from '@gnosis.pm/safe-react-components'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport GlobalStyle from './styles/globalStyles'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}